# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    #branches: [ "main" ]
  #pull_request:
    #branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # PYTHON

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # INSTALL PACKAGES

    #- name: Install dependencies
    #  run: |
    #    python -m pip install --upgrade pip
    #    pip install flake8 pytest
    #    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # TODO: use poetry instead!
    # poetry install --with test,docs

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install dependencies with Poetry
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        poetry --version
        poetry install

    # LINTING

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # TESTS

    - name: Test with pytest
      env:
        # set environment variable to use during testing
        TRUTHSOCIAL_USERNAME: ${{ secrets.TRUTHSOCIAL_USERNAME }}
        TRUTHSOCIAL_PASSWORD: ${{ secrets.TRUTHSOCIAL_PASSWORD }}
      run: |
        poetry run pytest
